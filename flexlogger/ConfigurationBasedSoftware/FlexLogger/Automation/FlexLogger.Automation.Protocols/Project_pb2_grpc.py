# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from flexlogger.ConfigurationBasedSoftware.FlexLogger.Automation.FlexLogger.Automation.Protocols import Project_pb2 as ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2


class ProjectStub(object):
    """Service interface for a server side project.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.OpenChannelSpecificationDocument = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.Project/OpenChannelSpecificationDocument',
                request_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenChannelSpecificationDocumentRequest.SerializeToString,
                response_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenChannelSpecificationDocumentResponse.FromString,
                )
        self.OpenLoggingSpecificationDocument = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.Project/OpenLoggingSpecificationDocument',
                request_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenLoggingSpecificationDocumentRequest.SerializeToString,
                response_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenLoggingSpecificationDocumentResponse.FromString,
                )
        self.OpenScreenDocument = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.Project/OpenScreenDocument',
                request_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenScreenDocumentRequest.SerializeToString,
                response_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenScreenDocumentResponse.FromString,
                )
        self.OpenTestSpecificationDocument = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.Project/OpenTestSpecificationDocument',
                request_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenTestSpecificationDocumentRequest.SerializeToString,
                response_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenTestSpecificationDocumentResponse.FromString,
                )
        self.Close = channel.unary_unary(
                '/national_instruments.flex_logger.automation.protocols.Project/Close',
                request_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.CloseProjectRequest.SerializeToString,
                response_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.CloseProjectResponse.FromString,
                )


class ProjectServicer(object):
    """Service interface for a server side project.
    """

    def OpenChannelSpecificationDocument(self, request, context):
        """RPC call to open the channel specification document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenLoggingSpecificationDocument(self, request, context):
        """RPC call to open the logging specification document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenScreenDocument(self, request, context):
        """RPC call to open the specified screen document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OpenTestSpecificationDocument(self, request, context):
        """RPC call to open the test specification document
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Close(self, request, context):
        """RPC call to close the current project.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'OpenChannelSpecificationDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenChannelSpecificationDocument,
                    request_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenChannelSpecificationDocumentRequest.FromString,
                    response_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenChannelSpecificationDocumentResponse.SerializeToString,
            ),
            'OpenLoggingSpecificationDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenLoggingSpecificationDocument,
                    request_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenLoggingSpecificationDocumentRequest.FromString,
                    response_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenLoggingSpecificationDocumentResponse.SerializeToString,
            ),
            'OpenScreenDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenScreenDocument,
                    request_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenScreenDocumentRequest.FromString,
                    response_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenScreenDocumentResponse.SerializeToString,
            ),
            'OpenTestSpecificationDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.OpenTestSpecificationDocument,
                    request_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenTestSpecificationDocumentRequest.FromString,
                    response_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenTestSpecificationDocumentResponse.SerializeToString,
            ),
            'Close': grpc.unary_unary_rpc_method_handler(
                    servicer.Close,
                    request_deserializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.CloseProjectRequest.FromString,
                    response_serializer=ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.CloseProjectResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'national_instruments.flex_logger.automation.protocols.Project', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Project(object):
    """Service interface for a server side project.
    """

    @staticmethod
    def OpenChannelSpecificationDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.Project/OpenChannelSpecificationDocument',
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenChannelSpecificationDocumentRequest.SerializeToString,
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenChannelSpecificationDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenLoggingSpecificationDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.Project/OpenLoggingSpecificationDocument',
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenLoggingSpecificationDocumentRequest.SerializeToString,
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenLoggingSpecificationDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenScreenDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.Project/OpenScreenDocument',
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenScreenDocumentRequest.SerializeToString,
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenScreenDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def OpenTestSpecificationDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.Project/OpenTestSpecificationDocument',
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenTestSpecificationDocumentRequest.SerializeToString,
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.OpenTestSpecificationDocumentResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Close(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/national_instruments.flex_logger.automation.protocols.Project/Close',
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.CloseProjectRequest.SerializeToString,
            ConfigurationBasedSoftware_dot_FlexLogger_dot_Automation_dot_FlexLogger_dot_Automation_dot_Protocols_dot_Project__pb2.CloseProjectResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
